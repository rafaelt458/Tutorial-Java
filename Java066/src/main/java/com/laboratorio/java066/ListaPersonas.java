/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.laboratorio.java066;

import com.laboratorio.java066.conexionDB.ConexionMySQL;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Rafael
 */
public class ListaPersonas extends javax.swing.JFrame {
    private ConexionMySQL conexionMySQL;
    private Connection conn;
    private MyTableModel modelo;
    private EditarPersona forma;
    
    public class MyTableModel extends DefaultTableModel {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false;
        }
    }

    /**
     * Creates new form ListaPersonas
     */
    public ListaPersonas() {
        initComponents();
        
        this.setTitle("Lista de personas");
        bModificar.setEnabled(false);
        bEliminar.setEnabled(false);
        
        String[] etiquetas = new String[5];
        etiquetas[0] = "Id";
        etiquetas[1] = "Nombres";
        etiquetas[2] = "Apellidos";
        etiquetas[3] = "Fecha nacimiento";
        etiquetas[4] = "Experiencia";
        
        modelo = new MyTableModel();
        modelo.addColumn("Id");
        modelo.addColumn("Nombres");
        modelo.addColumn("Apellidos");
        modelo.addColumn("FechaNac");
        modelo.addColumn("Experiencia");
        modelo.setColumnIdentifiers(etiquetas);
        
        // Establecer conexión a base de datos
        conexionMySQL = new ConexionMySQL();
        conn = conexionMySQL.conectarMySQL();
        if (conn == null) {
            System.out.print("No se ha podido establecer conexión con la base datos");
            System.exit(1);
        }
        System.out.println("Se ha establecido la conexión con la base datos");
        
        if (!cargarListaPersonas()) {
            JOptionPane.showMessageDialog(null, "Error al intentar cargar las personas",
                    "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        forma = new EditarPersona();
        forma.iniciarVariables(this, conn);
    }
    
    private boolean cargarListaPersonas() {
        Statement statement;
        ResultSet rs;
        Object[] fila;
        int i;
        
        for (i=modelo.getRowCount()-1; i>=0; i--) {
            modelo.removeRow(i);
        }
        
        try {
            statement = conn.createStatement();
            rs = statement.executeQuery("select idpersonas, nombres, apellidos, fechanac, experiencia from personas order by idpersonas");
            while (rs.next()) {
                fila = new Object[5];
                for (i=1; i<=5; i++) {
                    fila[i-1] = rs.getObject(i);
                }
                modelo.addRow(fila);
            }
        } catch (Exception ex) {
            System.out.println(ex.getMessage());
            return false;
        }
        
        tPersonas.setModel(modelo);
        
        return true;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tPersonas = new javax.swing.JTable();
        bAgregar = new javax.swing.JButton();
        bModificar = new javax.swing.JButton();
        bEliminar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tPersonas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tPersonas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tPersonas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tPersonas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tPersonasMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tPersonas);

        bAgregar.setText("Agregar");
        bAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bAgregarActionPerformed(evt);
            }
        });

        bModificar.setText("Modificar");
        bModificar.setToolTipText("");
        bModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bModificarActionPerformed(evt);
            }
        });

        bEliminar.setText("Eliminar");
        bEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bEliminarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(bAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 97, Short.MAX_VALUE)
                        .addComponent(bModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)
                        .addComponent(bEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bAgregar)
                    .addComponent(bModificar)
                    .addComponent(bEliminar))
                .addGap(0, 9, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        conexionMySQL.cerrarConexionMySQL(conn);
    }//GEN-LAST:event_formWindowClosing

    private void tPersonasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tPersonasMouseClicked
        if (tPersonas.getSelectedRowCount() > 0) {
            bModificar.setEnabled(true);
            bEliminar.setEnabled(true);
        } else {
            bModificar.setEnabled(false);
            bEliminar.setEnabled(false);
        }
    }//GEN-LAST:event_tPersonasMouseClicked

    private void bEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bEliminarActionPerformed
        Object[] opciones = {"Si", "No"};
        int resp = JOptionPane.showOptionDialog(null, "¿Está seguro de eliminar la persona seleccionada?",
                "Confirmación", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,
                opciones, opciones[0]);
        
        if (resp != 0) {
            return;
        }
        
        int row = tPersonas.getSelectedRow();
        int id = (int)modelo.getValueAt(row, 0);
        
        PreparedStatement ps;
        
        try {
            // Iniciar la transacción
            conn.setAutoCommit(false);
            
            ps = conn.prepareStatement("delete from personas where idpersonas = ?");
            ps.setInt(1, id);
            ps.execute();
            
            // Confirmar transacción
            conn.commit();
        } catch (SQLException ex) {
            System.out.println(ex.getMessage());
            // Revertir la transacción
            try {
                conn.rollback();
            } catch (SQLException ex2) {
                System.out.println(ex2.getMessage());
            }
            JOptionPane.showMessageDialog(null, "Error al intentar eliminar la persona seleccionada",
                    "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        modelo.removeRow(row);
        tPersonas.setModel(modelo);
        bModificar.setEnabled(false);
        bEliminar.setEnabled(false);
    }//GEN-LAST:event_bEliminarActionPerformed

    public void desactivarControles() {
        bAgregar.setEnabled(false);
        tPersonas.setEnabled(false);
    }
    
    public void activarControles() {
        cargarListaPersonas();
        bAgregar.setEnabled(true);
        tPersonas.setEnabled(true);
    }
    
    private void bAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bAgregarActionPerformed
        desactivarControles();
        forma.iniciarFormulario(0);
        forma.setVisible(true);
    }//GEN-LAST:event_bAgregarActionPerformed

    private void bModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bModificarActionPerformed
        int row = tPersonas.getSelectedRow();
        int id = (int)modelo.getValueAt(row, 0);
        
        desactivarControles();
        forma.iniciarFormulario(id);
        forma.setVisible(true);
    }//GEN-LAST:event_bModificarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ListaPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ListaPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ListaPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ListaPersonas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ListaPersonas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bAgregar;
    private javax.swing.JButton bEliminar;
    private javax.swing.JButton bModificar;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tPersonas;
    // End of variables declaration//GEN-END:variables
}